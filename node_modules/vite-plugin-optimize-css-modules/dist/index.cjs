'use strict';

const DEFAULT_DICTIONARY = '_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';
const createCounter = (dictionary = DEFAULT_DICTIONARY) => {
    const sequence = [dictionary[0]];
    return () => {
        const str = sequence.join('');
        let carry = 0;
        for (let i = 0; i < sequence.length; i++) {
            const index = dictionary.indexOf(sequence[i]) + carry + 1;
            if (index < dictionary.length) {
                sequence[i] = dictionary[index];
                carry = 0;
                break;
            }
            else {
                sequence[i] = dictionary[0];
                carry = 1;
            }
        }
        if (carry)
            sequence.push(dictionary[0]);
        return str;
    };
};

const optimizeCssModules = (options) => {
    const next = createCounter(options?.dictionary);
    const map = new Map();
    return {
        name: 'optimize-css-modules',
        apply: 'build',
        config: () => ({
            css: {
                modules: {
                    generateScopedName: (name, fileName) => {
                        const key = `${fileName} ${name}`;
                        let hash = map.get(key);
                        if (!hash) {
                            map.set(key, (hash = next()));
                        }
                        return hash;
                    }
                }
            }
        })
    };
};

exports.optimizeCssModules = optimizeCssModules;
